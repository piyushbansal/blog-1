<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>James Cooke Dot Info</title><link href="http://jamescooke.info/" rel="alternate"></link><link href="http://jamescooke.info/feeds/all.atom.xml" rel="self"></link><id>http://jamescooke.info/</id><updated>2012-11-30T12:00:00+00:00</updated><entry><title>Password cases and test fixes on pyramid_simpleauth</title><link href="http://jamescooke.info/password-cases-and-test-fixes-on-pyramid_simpleauth.html" rel="alternate"></link><updated>2012-11-30T12:00:00+00:00</updated><author><name>James</name></author><id>tag:jamescooke.info,2012-11-30:password-cases-and-test-fixes-on-pyramid_simpleauth.html</id><summary type="html">&lt;p&gt;At &lt;a class="reference external" href="http://quib.ly"&gt;quib.ly&lt;/a&gt; we're using Pyramid at the centre of a Python framework. Providing user functionality is the &lt;a class="reference external" href="https://github.com/thruflo/pyramid_simpleauth"&gt;pyramid_simpleauth&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;While writing itegration tests before we put the site live, I found that my test users we not able to authenticate with their testing passwords (usually just a simple string like 'Password'). Digging inside the simpleauth library, I found some fixes necessary to how cases are handled by the lib - plus also fixed some doctests while I was at it.&lt;/p&gt;
&lt;p&gt;These have all been merged in now and the library rolled up a version.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;GitHub Issue: &lt;a class="reference external" href="https://github.com/thruflo/pyramid_simpleauth/issues/5"&gt;Any upper case characters in passwords break auth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub Pull Request: &lt;cite&gt;Password cases possible fix &amp;lt;https://github.com/thruflo/pyramid_simpleauth/pull/7&amp;gt;_&lt;/cite&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="github"></category><category term="python"></category><category term="pyramid"></category></entry><entry><title>Django-mailchimp compatability with v1.3 API</title><link href="http://jamescooke.info/django-mailchimp-compatability-with-v13-api.html" rel="alternate"></link><updated>2012-09-25T07:14:00+01:00</updated><author><name>James</name></author><id>tag:jamescooke.info,2012-09-25:django-mailchimp-compatability-with-v13-api.html</id><summary type="html">&lt;p&gt;For a fublo project with &lt;a class="reference external" href="http://www.neuxpower.com/"&gt;Neuxpower&lt;/a&gt;, we had to communicate with &lt;a class="reference external" href="http://apidocs.mailchimp.com/"&gt;Mailchimp via their API&lt;/a&gt;. On Django one of the best libraries for this is &lt;a class="reference external" href="https://github.com/piquadrat/django-mailchimp"&gt;django-mailchimp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, in its previous state &lt;strong&gt;django-mailchimp&lt;/strong&gt; wasn't able to specify a &lt;tt class="docutils literal"&gt;send_welcome&lt;/tt&gt; parameter which lets &lt;strong&gt;Mailchimp&lt;/strong&gt; know whether it should send out a list welcome message when a new user subscribes. For the project, we were managing the signup explicitly with Neuxpower's code, so no welcome message was required and the default for Mailchimp was &lt;tt class="docutils literal"&gt;True&lt;/tt&gt; for sending meaning that Neuxpower's new customers would get hit with a double welcome message... Not desirable.&lt;/p&gt;
&lt;p&gt;This small change is now merged in with the library, which has rolled up to a 'v1.3' status as there is no backward compatibilty.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/piquadrat/django-mailchimp/issues/5"&gt;GitHub Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/piquadrat/django-mailchimp/pull/6"&gt;GitHub Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="github"></category><category term="python"></category><category term="django"></category><category term="mailchimp"></category></entry><entry><title>Fixing exception in django-menu</title><link href="http://jamescooke.info/fixing-exception-in-django-menu.html" rel="alternate"></link><updated>2012-05-05T19:40:00+01:00</updated><author><name>James</name></author><id>tag:jamescooke.info,2012-05-05:fixing-exception-in-django-menu.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/rossp/django-menu/"&gt;django-menu&lt;/a&gt; is a nice simple library for building very simple menus. However, when a site is loaded for the first time, the menu structure was not configured and so it was throwing a &lt;tt class="docutils literal"&gt;DoesNotExist&lt;/tt&gt; Exception.&lt;/p&gt;
&lt;p&gt;This tiny pull request simply wrapped the call to the menu in a &lt;tt class="docutils literal"&gt;try&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;except&lt;/tt&gt; so that new sites using &lt;strong&gt;django-menu&lt;/strong&gt; won't fall over on first load.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rossp/django-menu/pull/5"&gt;GitHub Issue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="github"></category><category term="python"></category><category term="django"></category></entry></feed>